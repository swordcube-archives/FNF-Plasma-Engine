import funkin.Controls;
import flixel.FlxObject;
import flixel.effects.FlxFlicker;

var bg:Sprite;
var magenta:Sprite;

var menuOptions:Array<String> = [
    "story-mode",
    "freeplay",
    "toolbox",
    "options"
];

var menuButtons:FlxGroup;
var camFollow:FlxObject;

var accepted:Bool = false;

var curSelected:Int = 0;

var scrollMenu = Paths.sound("menus/scrollMenu");
var confirmMenu = Paths.sound("menus/confirmMenu");
var cancelMenu = Paths.sound("menus/cancelMenu");

function create() {
    state.persistentUpdate = true;
    state.persistentDraw = true;

    bg = new Sprite().load("IMAGE", Paths_.image("menuBG"));
    bg.scrollFactor.set(0, 0.18);
    bg.scale.set(1.12, 1.12);
    bg.updateHitbox();
    bg.screenCenter();
    add(bg);

    magenta = new Sprite().load("IMAGE", Paths_.image("menuBGDesat"));
    magenta.scrollFactor = bg.scrollFactor;
    magenta.scale = bg.scale;
    magenta.updateHitbox();
    magenta.screenCenter();
    magenta.color = 0xFFfd719b;
    magenta.visible = false;
    add(magenta);

    menuButtons = new FlxGroup();
    add(menuButtons);

    for (i in 0...menuOptions.length) {
        var menuItem:Sprite = new Sprite(0, 60 + (i * 160));
        menuItem.frames = Assets.get("SPARROW", Paths_.image("ui/mainmenu/"+menuOptions[i]));
        menuItem.animation.addByPrefix('idle', "basic", 24);
        menuItem.animation.addByPrefix('selected', "white", 24);
        menuItem.animation.play('idle');
        menuItem.scrollFactor.set();
        menuItem.ID = i;
        menuItem.screenCenter(FlxAxes.X);
        menuButtons.add(menuItem);
    }

    camFollow = new FlxObject(0, 0, 1, 1);
    add(camFollow);

    FlxG.camera.follow(camFollow, null, 0.06);

    changeSelection(0);

    var versionShit:FlxText = new FlxText(0, 0, 0, "Plasma Engine v"+Main.engineVersion, 12);
    versionShit.scrollFactor.set();
    versionShit.setFormat(Paths.font("vcr"), 16, FlxColor.WHITE, FlxTextAlign.LEFT, FlxTextBorderStyle.OUTLINE, FlxColor.BLACK);
    versionShit.setPosition(FlxG.width - (versionShit.width + 5), FlxG.height - (versionShit.height + 5));
    add(versionShit);
}

function changeSelection(change:Int) {
    curSelected += change;

    if (curSelected < 0)
        curSelected = menuOptions.length - 1;

    if (curSelected > menuOptions.length - 1)
        curSelected = 0;

    menuButtons.forEach(function(spr:FlxSprite) {
        spr.animation.play('idle');

        if (spr.ID == curSelected) {
            spr.animation.play('selected');
            camFollow.setPosition(spr.getGraphicMidpoint().x, spr.getGraphicMidpoint().y);
        }

        spr.updateHitbox();
        spr.screenCenter(FlxAxes.X);
    });

    FlxG.sound.play(scrollMenu);

    DiscordRPC.changePresence(
        "In the Main Menu",
        "Selecting " + CoolUtil.firstLetterUppercase(StringTools.replace(menuOptions[curSelected], "-", " "))
    );
}

function update(elapsed) {
    if(Controls.UI_UP_P)
        changeSelection(-1);

    if(Controls.UI_DOWN_P)
        changeSelection(1);

    if(Controls.BACK_P) {
        FlxG.sound.play(cancelMenu);
        Main.switchScene(new ScriptedScene("TitleScene"));
    }

    if(Controls.ACCEPT_P && !accepted) {
        accepted = true;
        FlxG.sound.play(confirmMenu);

        // Toggle flashing for magenta bg sprite
        if(!Settings.get("Photosensitive Mode")) FlxFlicker.flicker(magenta, 1.1, 0.15, false);

        for(spr in menuButtons) {
            if (curSelected != spr.ID) {
                FlxTween.tween(spr, {alpha: 0}, 0.4, {
                    ease: FlxEase.quadOut,
                    onComplete: function(twn:FlxTween) {
                        spr.destroy();
                    }
                });
            } else {
                // Toggle flashing for the currently selected button
                if(!Settings.get("Photosensitive Mode")) {
                    FlxFlicker.flicker(spr, 1, 0.06, false, false, function(flick:FlxFlicker) {
                        switchToOtherStateShit();
                    });
                } else {
                    new FlxTimer().start(1, function(tmr:FlxTimer) {
                        switchToOtherStateShit();
                    });
                }
            }
        };
    }
}

function switchToOtherStateShit() {
    switch(menuOptions[curSelected]) {
        case 'story-mode':
            Main.switchScene(new ScriptedScene('StoryMenu'));
        case 'freeplay':
            Main.switchScene(new ScriptedScene('FreeplayMenu'));
        case 'options':
            Main.switchScene(new scenes.OptionsMenu());
    }
}